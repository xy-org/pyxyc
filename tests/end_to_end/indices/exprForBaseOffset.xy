import libxy.string;
import libxy.slice;
import libxy.stdio;
import libxy.memory;

def test(cond: Bool) {
   if (cond) {
        print("Match\n");
    } else {
        print("No Match\n");
    }
}

def funcReturningIdx(s: Str) -> s[ RangeSize ] {
    print("In funcReturningIdx\n");
    res := 0z:(s.size-4);
    return res;
}

def get(s: Str, int: RangeSize) -> Str~MemExt
>> int.start < s.size
>> (int.end - int.start) <= s.size
{
    return Str~MemExt{s.addr + int.start, int.end - int.start};
}

def returnString() -> Str~MemManaged {
    print("In returnString\n");
    return f"stringPartial";
}

def main~EntryPoint() {
    test(funcReturningIdx("stringFull") == "string");
    test(funcReturningIdx(returnString()) == "string");
}