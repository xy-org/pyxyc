;; Fibonacci number iterator
;; --------------------------

struct Fib {
    a := 0;
    b := 1;
}

def fibonacci~IterCtor() -> in() Fib {
    return Fib{};
}

def valid(fib: Fib) = true;

def next(fib: mut Fib) {
    fib = Fib{fib.a + fib.b, fib.a};
}

def get(fib: Fib) = fib.a;

;; Multiplies the first {lim} fibonacci numbers
def mulFibs(lim: Int) -> Int {
    return for (_ in :lim, fib in fibonacci()) -> (res := 1) { res *= fib; };
}
