# Funcs having in and mut params

struct A {
    num: Int;
}

def double(a: A) -> A {
    return A{a.num * 2};
}

def doubleInout(a: mut A) {
    a.num *= 2;
}

def callDoubles(a: mut A) -> A {
    a = double(a);
    doubleInout(a);
    return a;
}

def test() -> Int {
    a : mut = A{5};
    _ = double(a);
    doubleInout(a);
    return callDoubles(a).num;
}

# Funcs with default arguments

def defaultArg0(a: A, b : A = A{0}) -> A {return A{a.num + b.num};}

def defaultArg1(a: A, b := A{0}) -> A{ return A{a.num + b.num};}

def defaultArg2(a: A, b := rndA()) -> A{ return A{a.num * b.num};}

def defaultArg3(a: A, b := a'defaultArg1) -> A{ return A{a.num - b.num};}

def rndA() -> A {
    return A{5};
}


def testDefaultArgs() {
    _ = defaultArg0(A{0});

    _ = A{0}'defaultArg1();
    a := A{10};
    _ = a'defaultArg1(A{0});

    _ = a'defaultArg2();
    _ = a'defaultArg2(A{10});

    _ = a'defaultArg3();
    _ = a'defaultArg3(A{20});

    _ = A{0}'defaultArg2'defaultArg3;
}