struct List~[elem: struct, xy_dtor=true] {
    mem: Ptr;
}

def copy(l: mut List) -> List {
    # ...
    return List{};
}

def append(l: mut List, num: Int) {
}

def dtor(l: mut List) {}

def test() {
    list1 := List~Int@{1, 2, 3};
    list2 := list1@{3, 2, 1};
    list3 : mut = List~Int @for(i in @{1, 2, 3}) i*10;
    list3 @= for (i in @{4, 5}) i-1;
    list4 := list3 @ for(i in @{6, 7}) i/2;
}