def guards1(a: int, b: int) -> int
>> a > b
{
    return 0;
}

def guards2(a: int, b: pseudo ?) -> int
>> sizeof(a) > sizeof(b)
{
    return 0;
}

def guards3(a: pseudo ?, b: pseudo ?) -> int
>> typeof'a == b'typeof else break "Types must be the same"
{
    return 0;
}

struct ErrorCode {
    code: int;
}

def guards4(a: int, b: int) -> (c: int) || ErrorCode
>> (a < b) else error ErrorCode{5};
<< b > c
{
    return 0;
}

def test(a: int, b: int) -> int {
    res : var = 0;
    res += guards1(a, b);
    res += guards2(a, b);
    res += guards3(res, b);
    res += guards4(a, res);
    return res;
}