*def sizeof(^arg: Any) -> Size {
    # Implemented by the compiler
}

*def offsetof(^arg: Any) -> Size {
    # Implemented by the compiler
}

*def alignof(^arg: Any) -> Size {
    # Implemented by the compiler
}

struct FieldArray {
    # Compile-time only structure implemented by the compiler
}

*def fieldsof(^arg: Any) -> FieldArray {
    # Implemented by the compiler
}

struct StrLit {
    # Implemented by the compiler
}

*def nameof(^arg: Any) -> StrLit {
    # Implemented by the compiler
}

*def commentof(^arg: Any) -> StrLit {
    # Implemented by the compiler
}

*def packageof(^arg: Any) -> StrLit {
    # Implemented by the compiler
}

;; Return the path to the file where {arg} is compiled
*def fileof(^arg: Any) -> StrLit {
    # Implemented by the compiler
}

;; Return path to the file where the function is called
*def fileof() -> StrLit {
    # Implemented by the compiler
}

;; Return the line {arg} is defined on
*def linenoof(^arg: Any) -> Uint {
    # Implemented by the compiler
}

;; Return line number where the function is called
*def linenoof() -> Uint {
    # Implemented by the compiler
}

;; Return the source code that was compiled into {expr}
*def srcof(^expr: Any) -> StrLit {
    # Implemented by the compiler
}

;; Return the line of code where {expr}'s src is located
*def srclineof(^expr: Any) -> StrLit {
    # Implemented by the compiler
}

;; Compares two types. Returns true if types are identical including tags.
;; TODO should be renamed to cmp or something. Maybe don't use.
*def typeEqs(a: pseudo Any, b: pseudo Any) -> Bool {
    # Implemented by the compiler
}